{"version":3,"sources":["webpack:///./src/components/map/map.jsx","webpack:///./src/components/offers/offers.jsx"],"names":["MapConfig","ID","ZOOM","MARKER_PATH","ACTIVE_MARKER_PATH","MARKER_SIZE","TITLE_LAYER","Map","props","group","_icon","leaflet","icon","iconUrl","iconSize","_activeIcon","selectedOffer","coordinates","layerGroup","addTo","map","item","marker","city","CITIES","get","currentCity","center","zoom","zoomControl","scrollWheelZoom","setView","tileLayer","_addMarkers","_initMap","clearLayers","PureComponent","propTypes","PropTypes","array","isRequired","string","Offers","_onSelectOffer","bind","id","onSetActiveOffer","offers","classModOffers","join","offer","arrayOf","shape","number","title","previewPhoto","type","isPremium","bool","isFavorite","price","rating","classModCard","func","mapDispatchToProps","dispatch","ActionCreators","setActiveIdOffer","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA,IAAMA,SAAS,GAAG;AAChBC,IAAE,OADc;AAEhBC,MAAI,EAAE,EAFU;AAGhBC,aAAW,kBAHK;AAIhBC,oBAAkB,yBAJF;AAKhBC,aAAW,EAAE,CAAC,EAAD,EAAK,EAAL,CALG;AAMhBC,aAAW;AANK,CAAlB;;IASMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,KAAL,GAAaC,8CAAO,CAACC,IAAR,CAAa;AACxBC,aAAO,EAAEb,SAAS,CAACG,WADK;AAExBW,cAAQ,EAAEd,SAAS,CAACK;AAFI,KAAb,CAAb;AAIA,UAAKU,WAAL,GAAmBJ,8CAAO,CAACC,IAAR,CAAa;AAC9BC,aAAO,EAAEb,SAAS,CAACI,kBADW;AAE9BU,cAAQ,EAAEd,SAAS,CAACK;AAFU,KAAb,CAAnB;AARiB;AAYlB;;;;kCAEa;AAAA,wBACyB,KAAKG,KAD9B;AAAA,UACLQ,aADK,eACLA,aADK;AAAA,UACUC,WADV,eACUA,WADV;AAGZ,WAAKR,KAAL,GAAaE,8CAAO,CAACO,UAAR,GAAqBC,KAArB,CAA2B,KAAKC,GAAhC,CAAb;AAHY;AAAA;AAAA;;AAAA;AAKZ,6BAAiBH,WAAjB,8HAA8B;AAAA,cAArBI,IAAqB;AAC5BV,wDAAO,CAACW,MAAR,CAAeD,IAAf,EAAqB;AAACT,gBAAI,EAAE,KAAKF;AAAZ,WAArB,EACGS,KADH,CACS,KAAKV,KADd;AAED;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASZE,oDAAO,CAACW,MAAR,CAAeN,aAAf,EAA8B;AAACJ,YAAI,EAAE,KAAKG;AAAZ,OAA9B,EAAwDI,KAAxD,CAA8D,KAAKV,KAAnE;AACD;;;+BAEU;AACT,UAAMc,IAAI,GAAGC,iDAAM,CAACC,GAAP,CAAW,KAAKjB,KAAL,CAAWkB,WAAtB,CAAb;AAEA,WAAKN,GAAL,GAAWT,8CAAO,CAACS,GAAR,CAAYpB,SAAS,CAACC,EAAtB,EAA0B;AACnC0B,cAAM,EAAEJ,IAD2B;AAEnCK,YAAI,EAAE5B,SAAS,CAACE,IAFmB;AAGnC2B,mBAAW,EAAE,KAHsB;AAInCP,cAAM,EAAE,IAJ2B;AAKnCQ,uBAAe,EAAE;AALkB,OAA1B,CAAX;AAQA,WAAKV,GAAL,CAASW,OAAT,CAAiBR,IAAjB,EAAuBvB,SAAS,CAACE,IAAjC;AAEAS,oDAAO,CACJqB,SADH,CACahC,SAAS,CAACM,WADvB,EAEGa,KAFH,CAES,KAAKC,GAFd;;AAGA,WAAKa,WAAL;AACD;;;wCAEmB;AAClB,WAAKC,QAAL;AACD;;;yCAEoB;AAAA,yBAC+B,KAAK1B,KADpC;AAAA,UACZkB,WADY,gBACZA,WADY;AAAA,UACCT,WADD,gBACCA,WADD;AAAA,UACcD,aADd,gBACcA,aADd;AAGnB,WAAKP,KAAL,CAAW0B,WAAX;AACA,WAAKf,GAAL,CAASW,OAAT,CAAiBP,iDAAM,CAACC,GAAP,CAAWC,WAAX,CAAjB,EAA0C1B,SAAS,CAACE,IAApD;AAJmB;AAAA;AAAA;;AAAA;AAMnB,8BAAiBe,WAAjB,mIAA8B;AAAA,cAArBI,IAAqB;AAC5BV,wDAAO,CAACW,MAAR,CAAeD,IAAf,EAAqB;AAACT,gBAAI,EAAE,KAAKF;AAAZ,WAArB,EACGS,KADH,CACS,KAAKV,KADd;AAED;AATkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWnBE,oDAAO,CAACW,MAAR,CAAeN,aAAf,EAA8B;AAACJ,YAAI,EAAE,KAAKG;AAAZ,OAA9B,EACGI,KADH,CACS,KAAKV,KADd;AAED;;;6BAEQ;AACP,aACE;AAAK,iBAAS,EAAC,aAAf;AAA6B,UAAE,EAAC;AAAhC,QADF;AAGD;;;;EArEe2B,mD;;AAwElB7B,GAAG,CAAC8B,SAAJ,GAAgB;AACdpB,aAAW,EAAEqB,iDAAS,CAACC,KAAV,CAAgBC,UADf;AAEdd,aAAW,EAAEY,iDAAS,CAACG,MAAV,CAAiBD,UAFhB;AAGdxB,eAAa,EAAEsB,iDAAS,CAACC;AAHX,CAAhB;AAMehC,kEAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AAEA;AACA;AAEO,IAAMmC,MAAb;AAAA;AAAA;AAAA;;AACE,kBAAYlC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AAEA,UAAKmC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AAHiB;AAIlB;;AALH;AAAA;AAAA,mCAOiBC,EAPjB,EAOqB;AACjB,WAAKrC,KAAL,CAAWsC,gBAAX,CAA4BD,EAA5B;AACD;AATH;AAAA;AAAA,6BAWW;AAAA;;AAAA,wBAC+B,KAAKrC,KADpC;AAAA,UACAuC,MADA,eACAA,MADA;AAAA,8CACQC,cADR;AAAA,UACQA,cADR,sCACyB,EADzB;AAGP,aAAO;AACL,iBAAS,YAAKA,cAAc,CAACC,IAAf,KAAL;AADJ,SAGJF,MAAM,CAAC3B,GAAP,CAAW,UAAC8B,KAAD,EAAW;AACrB,eAAO,2DAAC,kEAAD;AACL,aAAG,EAAEA,KAAK,CAACL;AADN,WAEDK,KAFC;AAGL,oBAAU,EAAE,MAAI,CAACP,cAHZ;AAIL,wBAAc,UAJT;AAKL,sBAAY;AALP,WAAP;AAOD,OARA,CAHI,CAAP;AAaD;AA3BH;;AAAA;AAAA,EAA4BP,mDAA5B;AA8BAM,MAAM,CAACL,SAAP,GAAmB;AACjBU,QAAM,EAAET,iDAAS,CAACa,OAAV,CAAkBb,iDAAS,CAACc,KAAV,CAAgB;AACxCP,MAAE,EAAEP,iDAAS,CAACe,MAAV,CAAiBb,UADmB;AAExCc,SAAK,EAAEhB,iDAAS,CAACG,MAAV,CAAiBD,UAFgB;AAGxCe,gBAAY,EAAEjB,iDAAS,CAACG,MAAV,CAAiBD,UAHS;AAIxCgB,QAAI,EAAElB,iDAAS,CAACG,MAAV,CAAiBD,UAJiB;AAKxCiB,aAAS,EAAEnB,iDAAS,CAACoB,IAAV,CAAelB,UALc;AAMxCmB,cAAU,EAAErB,iDAAS,CAACoB,IAAV,CAAelB,UANa;AAOxCoB,SAAK,EAAEtB,iDAAS,CAACe,MAAV,CAAiBb,UAPgB;AAQxCqB,UAAM,EAAEvB,iDAAS,CAACe,MAAV,CAAiBb;AARe,GAAhB,CAAlB,EASJA,UAVa;AAWjBQ,gBAAc,EAAEV,iDAAS,CAACC,KAXT;AAYjBuB,cAAY,EAAExB,iDAAS,CAACG,MAZP;AAajBK,kBAAgB,EAAER,iDAAS,CAACyB,IAAV,CAAevB;AAbhB,CAAnB;;AAgBA,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCnB,oBAAgB,EAAE,0BAACD,EAAD;AAAA,aAAQoB,QAAQ,CAACC,iEAAc,CAACC,gBAAf,CAAgCtB,EAAhC,CAAD,CAAhB;AAAA;AADsB,GAAf;AAAA,CAA3B;;AAIeuB,0HAAO,CAAC,IAAD,EAAOJ,kBAAP,CAAP,CAAkCtB,MAAlC,CAAf,E","file":"2.bundle.js","sourcesContent":["import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\nimport leaflet from \"leaflet\";\n\nimport {CITIES} from \"./../../constants\";\n\nconst MapConfig = {\n  ID: `map`,\n  ZOOM: 12,\n  MARKER_PATH: `img/marker.svg`,\n  ACTIVE_MARKER_PATH: `img/active-marker.svg`,\n  MARKER_SIZE: [30, 30],\n  TITLE_LAYER: `https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png`\n};\n\nclass Map extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.group = null;\n    this._icon = leaflet.icon({\n      iconUrl: MapConfig.MARKER_PATH,\n      iconSize: MapConfig.MARKER_SIZE,\n    });\n    this._activeIcon = leaflet.icon({\n      iconUrl: MapConfig.ACTIVE_MARKER_PATH,\n      iconSize: MapConfig.MARKER_SIZE,\n    });\n  }\n\n  _addMarkers() {\n    const {selectedOffer, coordinates} = this.props;\n\n    this.group = leaflet.layerGroup().addTo(this.map);\n\n    for (let item of coordinates) {\n      leaflet.marker(item, {icon: this._icon})\n        .addTo(this.group);\n    }\n    leaflet.marker(selectedOffer, {icon: this._activeIcon}).addTo(this.group);\n  }\n\n  _initMap() {\n    const city = CITIES.get(this.props.currentCity);\n\n    this.map = leaflet.map(MapConfig.ID, {\n      center: city,\n      zoom: MapConfig.ZOOM,\n      zoomControl: false,\n      marker: true,\n      scrollWheelZoom: false,\n    });\n\n    this.map.setView(city, MapConfig.ZOOM);\n\n    leaflet\n      .tileLayer(MapConfig.TITLE_LAYER)\n      .addTo(this.map);\n    this._addMarkers();\n  }\n\n  componentDidMount() {\n    this._initMap();\n  }\n\n  componentDidUpdate() {\n    const {currentCity, coordinates, selectedOffer} = this.props;\n\n    this.group.clearLayers();\n    this.map.setView(CITIES.get(currentCity), MapConfig.ZOOM);\n\n    for (let item of coordinates) {\n      leaflet.marker(item, {icon: this._icon})\n        .addTo(this.group);\n    }\n\n    leaflet.marker(selectedOffer, {icon: this._activeIcon})\n      .addTo(this.group);\n  }\n\n  render() {\n    return (\n      <div className=\"cities__map\" id=\"map\"/>\n    );\n  }\n}\n\nMap.propTypes = {\n  coordinates: PropTypes.array.isRequired,\n  currentCity: PropTypes.string.isRequired,\n  selectedOffer: PropTypes.array,\n};\n\nexport default Map;\n","import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {ActionCreators} from \"./../../reducer/data/data\";\nimport CardPlace from \"../card-place/card-place.jsx\";\n\nexport class Offers extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._onSelectOffer = this._onSelectOffer.bind(this);\n  }\n\n  _onSelectOffer(id) {\n    this.props.onSetActiveOffer(id);\n  }\n\n  render() {\n    const {offers, classModOffers = []} = this.props;\n\n    return <div\n      className={`${classModOffers.join(` `)} places__list`}\n    >\n      {offers.map((offer) => {\n        return <CardPlace\n          key={offer.id}\n          {...offer}\n          onSelected={this._onSelectOffer}\n          classModPrefix={`cities`}\n          mainClassMod={`cities__place-card`}\n        />;\n      })}\n    </div>;\n  }\n}\n\nOffers.propTypes = {\n  offers: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    previewPhoto: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    isPremium: PropTypes.bool.isRequired,\n    isFavorite: PropTypes.bool.isRequired,\n    price: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired,\n  })).isRequired,\n  classModOffers: PropTypes.array,\n  classModCard: PropTypes.string,\n  onSetActiveOffer: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetActiveOffer: (id) => dispatch(ActionCreators.setActiveIdOffer(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(Offers);\n"],"sourceRoot":""}